alle "python" commandos in der Console können auch durch "py" ausgeführt werden ()
Virtuelle Umgebung erstellen: python -m venv [myvenv]
Virtuelle Umgebung starten: myvenv\Scripts\activate
In PowerShell: myvenv\Scripts\activate.ps1
Wenn Skripte nicht ausgeführt werden: Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser

In gestarteter virtueller Umgebung, (myvenv) muss vorab stehen: 
    Einmalig anlegen:
        upgrade pip: python -m pip install --upgrade pip (pip = Software für Django Installation)
        Django Installation: pip install -r requirements.txt (requirements.txt = Abhängigkeiten, die von pip install installiert werden sollen)
        Django Project neu erstellen: django-admin.exe startproject [mysite] .
        Datenbank erstellen: python manage.py migrate
    Kommmandos in der erstellten Struktur:
        python manage.py createsuperuser
        Webserver starten: py manage.py runserver   (Abbruch mit Strg+C)
        python manage.py startapp blog (Erstellen der eigentlichen App)

blog/models.py 
    (öffnen und Code eingeben)

In gestarteter virtueller Umgebung, (myvenv) muss vorab stehen: 
        python manage.py makemigrations blog (Django Bearbeitung von blog mitteilen)
        python manage.py migrate blog (Model der Datenbank hinzufügen)

Git-Repository
    Initialisierung (einmal pro Project):
        git init
        git config --global user.name "Dein Name"
        git config --global user.email du@example.com
    .gitignore erstellen (um lokale Dateien auszuschließen)
    git add . (speichern der Einstellungen) <Problem mit Port 443. Workarround = Stadtnetz abschalten>
    git status (überprüfen der Einstellungen)
    git commit -m "Änderungstext" (Änderungen kommentieren)
    git push (Upload Änderungen) <Problem mit Port 443. Workarround = Stadtnetz abschalten>

Site auf PythonAnywhere konfigurieren
    Auf der HP:
        New console <$ Bash> klicken
    In der Web Console: 
        pip install --user pythonanywhere (Hilfsprogramm zum Code holen von GitHub, einmalig)
        pa_autoconfigure_django.py --python=3.10 https://github.com/<your-github-username>/my-first-blog.git
        Bei mir: pa_autoconfigure_django.py --python=3.10 https://github.com/TeamKursch/my-first-blog.git (Code von GitHub, virtuelle Umgebung einrichten, DB einrichten...)
        python manage.py createsuperuser
        ****Seite ist Online****
        Seite aktualisieren:
        cd ~/https://mungopark.eu.pythonanywhere.com/
        git pull

URLs erzeugen
    in mysite/urls.py
    in blog/urls.py
    blog/views.py

Erweiterungen
    code gpt
    HTML/CSS/JavaScript Snippets
    Restore Terminals (nI)
    es6-string-html (nI)
    IntelliCode

templates erzeugen
    in blog\templates\blog\post_list.html
